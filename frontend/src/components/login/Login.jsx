// Login.jsx
import React, { useState, useEffect } from "react";
import styles from "./Auth.module.css";
import { Button, Form, Row, Col, Modal, Alert } from "react-bootstrap";
import { FaGoogle } from "react-icons/fa";
import MK_icon from "../../assets/img/Login-img/MyMSI_icon.png";
import MK_qr from "../../assets/img/Login-img/MyMSI_qrcode.png";
import appStore from "../../assets/img/Login-img/btn-appstore.png";
import ggStore from "../../assets/img/Login-img/btn-googleplay.png";
import { Link, useNavigate } from "react-router-dom";
import { jwtDecode } from "jwt-decode";
import { authService } from "../../services";

const Login = () => {
  const navigate = useNavigate();
  // N·∫øu ƒë√£ ƒëƒÉng nh·∫≠p th√¨ t·ª± ƒëi·ªÅu h∆∞·ªõng ƒë·∫øn trang user
  useEffect(() => {
    const token = localStorage.getItem("token");
    if (token) {
      try {
        const payload = jwtDecode(token);
        const isExpired = payload.exp * 1000 < Date.now();

        if (!isExpired) {
          if (payload.user?.role === "admin") {
            navigate("/admin");
          } else {
            navigate("/user/profile");
          }
        } else {
          localStorage.removeItem("token"); // Token h·∫øt h·∫°n th√¨ x√≥a
        }
      } catch (err) {
        console.error("L·ªói gi·∫£i m√£ token:", err);
        localStorage.removeItem("token");
      }
    }
  }, []);
  const [showRegisterModal, setShowRegisterModal] = useState(false);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [loading, setLoading] = useState(false);
  const [errorMessage, setErrorMessage] = useState("");

  const handleShowRegisterModal = () => setShowRegisterModal(true);
  const handleCloseRegisterModal = () => setShowRegisterModal(false);

  const handleLogin = async (e) => {
    e.preventDefault();
    setLoading(true);
    setErrorMessage("");

    try {
      const response = await authService.login(email, password);
      const result = response.data;

      console.log("‚úÖ Login Success");
      localStorage.setItem("token", result.token);
      localStorage.setItem("userEmail", result.user.email);

      // Phan role khi thanh cong
      if (result.user.role === "admin") {
        navigate("/admin");
      } else {
        navigate("/user/profile");
      }
    } catch (error) {
      if (error.response) {
        setErrorMessage({
          type: "danger",
          msg:
            error.response.data.message ||
            "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i. Vui l√≤ng ki·ªÉm tra email v√† m·∫≠t kh·∫©u.",
        });
        console.error("‚ùå Login Failed:", error.response.data.message);
      } else {
        setErrorMessage({
          type: "danger",
          msg: "C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß. Vui l√≤ng th·ª≠ l·∫°i sau.",
        });
        console.error("üí• Network error:", error.message);
      }
    } finally {
      setLoading(false);
    }
  };

  const handleSocialLogin = (provider) => {
    // Here you would handle social login logic
    console.log(`Login with ${provider}`);
  };

  return (
    <div className={`py-5 ${styles.loginBg}`}>
      <div className="commonContainer">
        <h2 className="text-center font-bold mb-5 mt-2">
          Ch√†o m·ª´ng ƒë·∫øn v·ªõi Trung t√¢m th√†nh vi√™n MK
        </h2>

        <Row className="flex-md-row-reverse">
          {/* Right Column - Login Form */}
          <Col lg={6}>
            <div>
              <section className="p-4">
                <h4 className="mb-3 font-bold">ƒêƒÉng nh·∫≠p t√†i kho·∫£n MK</h4>
                <p className="mb-4">
                  Vui l√≤ng s·ª≠ d·ª•ng t√†i kho·∫£n b·∫°n ƒë√£ ƒëƒÉng k√Ω ƒë·ªÉ ƒëƒÉng nh·∫≠p v√†o
                  trung t√¢m th√†nh vi√™n MK!
                </p>

                <Form onSubmit={handleLogin}>
                  <Form.Group className="mb-3">
                    <Form.Control
                      type="email"
                      placeholder="ƒê·ªãa ch·ªâ th∆∞ ƒëi·ªán t·ª≠"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      className="p-3"
                      disabled={loading}
                      required
                    />
                  </Form.Group>

                  <Form.Group className="mb-3">
                    <Form.Control
                      type="password"
                      placeholder="M·∫≠t Kh·∫©u"
                      value={password}
                      onChange={(e) => setPassword(e.target.value)}
                      className="p-3"
                      disabled={loading}
                      required
                    />
                  </Form.Group>

                  {errorMessage && (
                    <Alert
                      variant={errorMessage.type}
                      onClose={() => setErrorMessage("")}
                      dismissible
                    >
                      {errorMessage.msg}
                    </Alert>
                  )}

                  <Button
                    variant="danger"
                    type="submit"
                    disabled={loading}
                    className={`w-100 py-2 mb-3 d-flex justify-content-between ${styles.customColor}`}
                  >
                    <div>ƒêƒÉng nh·∫≠p</div>
                    <div className="me-2">&gt;</div>
                  </Button>

                  <div
                    className={`${styles.borderBottom} d-flex justify-content-end mb-3 text pb-4`}
                  >
                    <div
                      href="#"
                      className={`text-decoration-none small pe-2 ${styles.loginBorderRight}`}
                    >
                      B·∫°n qu√™n m·∫≠t kh·∫©u?
                    </div>
                    <div href="#" className="text-decoration-none small ms-2">
                      G·ª≠i l·∫°i email x√°c minh
                    </div>
                  </div>

                  <div className="d-flex justify-content-between">
                    <p className="text-center text-sm mb-3">
                      HO·∫∂C ƒêƒÇNG NH·∫¨P V·ªöI
                    </p>
                    <div className="d-flex justify-content-center gap-2">
                      <Button
                        variant="danger"
                        onClick={() => handleSocialLogin("Google")}
                        className="px-3 py-2"
                      >
                        <FaGoogle />
                        <span className="text-bold">oogle</span>
                      </Button>
                    </div>
                  </div>
                </Form>
              </section>
            </div>
          </Col>

          {/* Left Column - Registration */}
          <Col lg={6} className={`mb-4 ${styles.loginBorderRight}`}>
            <div>
              <section className="border-0 bg-transparent p-4">
                <h4 className="mb-3 font-bold">
                  B·∫°n ch∆∞a ph·∫£i l√† Th√†nh vi√™n MK?
                </h4>
                <p>
                  Tr·ªü th√†nh th√†nh vi√™n MK ƒë·ªÉ theo d√µi c√°c ch∆∞∆°ng tr√¨nh khuy·∫øn
                  m√£i v√† c·∫≠p nh·∫≠t c√°c ch∆∞∆°ng tr√¨nh h·ªó tr·ª£ m·ªõi nh·∫•t.
                </p>
                <Button
                  variant="secondary"
                  className={`d-flex align-items-center justify-content-between mb-4 px-4 py-2 w-50 ${styles.cancelButton}`}
                  onClick={handleShowRegisterModal}
                >
                  T·∫°o t√†i kho·∫£n m·ªõi
                  <span className="ms-2">&gt;</span>
                </Button>
                <div className={`${styles.borderBottom} pb-3 mb-4`}>
                  <h6 className="d-flex font-bold align-items-center">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      fill="currentColor"
                      className="bi bi-person me-2"
                      viewBox="0 0 16 16"
                    >
                      <path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6m2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0m4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4m-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664z" />
                    </svg>
                    L·ª£i √≠ch th√†nh vi√™n
                  </h6>
                  <div className="d-flex">
                    <div className="ms-4 col">
                      <p className="mb-2">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="16"
                          height="16"
                          fill="green"
                          className="bi bi-check me-2"
                          viewBox="0 0 16 16"
                        >
                          <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z" />
                        </svg>
                        ƒêƒÉng k√≠ b·∫£o h√†nh
                      </p>
                      <p className="mb-2">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="16"
                          height="16"
                          fill="green"
                          className="bi bi-check me-2"
                          viewBox="0 0 16 16"
                        >
                          <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z" />
                        </svg>
                        C·∫≠p nh·∫≠t ƒë·ªôc quy·ªÅn v·ªÅ c√°c ch∆∞∆°ng tr√¨nh khuy·∫øn m√£i v√† s·ª±
                        ki·ªán
                      </p>
                    </div>
                    <div className="ms-4 col">
                      <p className="mb-2">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="16"
                          height="16"
                          fill="green"
                          className="bi bi-check me-2"
                          viewBox="0 0 16 16"
                        >
                          <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z" />
                        </svg>
                        H·ªó tr·ª£ s·∫£n ph·∫©m v√† d·ªãch v·ª• nhanh h∆°n
                      </p>
                      <p className="mb-2">
                        <svg
                          xmlns="http://www.w3.org/2000/svg"
                          width="16"
                          height="16"
                          fill="green"
                          className="bi bi-check me-2"
                          viewBox="0 0 16 16"
                        >
                          <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z" />
                        </svg>
                        Xem c√°c s·∫£n ph·∫©m MK hi·ªán ƒë√£ ƒëƒÉng k√Ω c·ªßa b·∫°n
                      </p>
                    </div>
                  </div>
                </div>
                <div className={`${styles.borderBottom} pb-3 mb-4 d-flex`}>
                  <i className="fa-solid fa-gift text-secondary"></i>
                  <h6 className="ms-2 font-bold">
                    N√¢ng c·∫•p quy·ªÅn l·ª£i th√†nh vi√™n c·ªßa b·∫°n b·∫±ng c√°ch ch·ªçn tham
                    gia Ch∆∞∆°ng tr√¨nh Ph·∫ßn th∆∞·ªüng c·ªßa MK ƒë·ªÉ c√≥ c∆° h·ªôi nh·∫≠n ƒë∆∞·ª£c
                    nhi·ªÅu ph·∫ßn th∆∞·ªüng ƒë·ªôc quy·ªÅn h∆°n!
                  </h6>
                </div>
                <div className="mb-4">
                  <h6 className="d-flex align-items-center">
                    <svg
                      xmlns="http://www.w3.org/2000/svg"
                      width="20"
                      height="20"
                      fill="currentColor"
                      className="bi bi-phone me-2"
                      viewBox="0 0 16 16"
                    >
                      <path d="M11 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM5 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
                      <path d="M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2" />
                    </svg>
                    <div className="font-bold">MyMK</div>
                  </h6>
                  <div className="ms-4">
                    <p className="mb-2">
                      MyMK cho ph√©p b·∫°n truy c·∫≠p nhanh ch√≥ng v√† d·ªÖ d√†ng v√†o m·ªçi
                      th·ª© trong MK. "T·ª´ n·ªôi dung Ch·ªâ-trong-·ª©ng-d·ª•ng, nhi·ªám v·ª• v√†
                      ph·∫ßn th∆∞·ªüng ƒë·∫øn y√™u c·∫ßu h·ªó tr·ª£ s·∫£n ph·∫©m ‚Äì b·∫°n c√≥ th·ªÉ l√†m
                      t·∫•t c·∫£ ·ªü ƒë√¢y!"
                    </p>
                    <div className="d-flex align-items-center">
                      <img
                        src={MK_icon}
                        alt="MK Logo"
                        height="80"
                        className="me-3"
                      />
                      <img
                        src={MK_qr}
                        alt="QR Code"
                        height="80"
                        className="me-3"
                      />
                      <div>
                        <a href="#" className="d-block mb-2">
                          <img src={appStore} alt="App Store" width="100" />
                        </a>
                        <a href="#" className="d-block">
                          <img src={ggStore} alt="Google Play" width="100" />
                        </a>
                      </div>
                    </div>
                  </div>
                </div>
              </section>
            </div>
          </Col>
        </Row>
      </div>

      {/* Registration Modal */}
      <Modal
        show={showRegisterModal}
        onHide={handleCloseRegisterModal}
        centered
        size="lg"
      >
        <Modal.Header closeButton>
          <Modal.Title className="text-center w-100">
            <h4 className="font-bold mt-4">ƒêƒÉng k√Ω ngay</h4>
          </Modal.Title>
        </Modal.Header>
        <Modal.Body>
          <p>
            Vui l√≤ng s·ª≠ d·ª•ng c√°c ph∆∞∆°ng ph√°p sau ƒë·ªÉ ƒëƒÉng k√Ω l√†m th√†nh vi√™n MK
          </p>

          <Link to={"/register"} className="text-white text-decoration-none">
            <Button
              variant="danger"
              className={`w-100 mb-2 py-2 d-flex align-items-center justify-content-center ${styles.customColor}`}
              hover=""
            >
              <i className="fa-solid fa-envelope me-2"></i> ƒêƒÉng k√Ω v·ªõi Email
            </Button>
          </Link>
          <Button
            variant="danger"
            style={{ backgroundColor: "#DB4437" }}
            className={`w-100 mb-2 py-2 d-flex align-items-center justify-content-center ${styles.customColorGG}`}
          >
            <FaGoogle className="me-2" /> ƒêƒÉng k√Ω v·ªõi Google
          </Button>
        </Modal.Body>
      </Modal>
    </div>
  );
};

export default Login;
